import type { MessageContext } from "../types";
import {
  ADMIN_GROUP_ID,
  ADMIN_IDS,
  ADMIN_USERNAMES,
  escapeHtml,
  GROUP_ID,
} from "../utils";

export const report = async (ctx: MessageContext) => {
  if (!ctx.chat || ctx.chat.id !== GROUP_ID) {
    return;
  }

  const user = ctx.from;

  if (!user) return;

  const reply = ctx.message?.reply_to_message;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!reply) {
    return ctx.reply(
      "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è.",
      {
        reply_parameters: {
          message_id: ctx.message.message_id,
        },
      },
    );
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
    let replyText = "";
    if ("text" in reply) {
      replyText = reply.text || "";
    } else if ("caption" in reply && reply.caption) {
      replyText = reply.caption;
    } else {
      replyText = "‚è∫Ô∏è –ú–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–µ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ —Ç.–¥.)";
    }

    // –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    if (replyText.length > 500) {
      replyText = replyText.substring(0, 500) + "...";
    }

    const chatTitle = "title" in ctx.chat ? ctx.chat.title : "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç";

    let adminMentions = "";

    if (ADMIN_USERNAMES.length > 0) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç —Å —Ç–µ–≥–∞–º–∏ <a> –¥–ª—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
      adminMentions = ADMIN_USERNAMES.map(
        (username) => `<a href="https://t.me/${username}">@${username}</a>`,
      ).join(" ");
    } else {
      // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —á–µ—Ä–µ–∑ ID
      adminMentions = ADMIN_IDS.map(
        (id) => `<a href="tg://user?id=${id}">Ô∏è</a>`,
      ).join(" ");
    }

    // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —á–∞—Ç–µ
    const publicText = [
      `üö® <b>–†–µ–ø–æ—Ä—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</b>`,
      `üë§ –û—Ç: <a href="tg://user?id=${user.id}">${escapeHtml(user.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")}</a>`,
      `üí¨ –ù–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ:`,
      `<blockquote>${escapeHtml(replyText)}</blockquote>`,
      "",
      `${adminMentions} - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞`,
      `üîó [–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é](https://t.me/c/${String(GROUP_ID).replace("-100", "")}/${reply.message_id})`,
    ].join("\n");

    await ctx.replyWithHTML(publicText, {
      reply_parameters: {
        message_id: reply.message_id,
      },
    });

    // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º —á–∞—Ç–µ
    const adminMessage = [
      `${adminMentions}`,
      "üö® <b>–ù–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç –≤ —á–∞—Ç–µ!</b>",
      `üë§ –û—Ç: <a href="tg://user?id=${user.id}">${escapeHtml(user.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")}</a>`,
      `üÜî ID: <code>${user.id}</code>`,
      `üìç –ß–∞—Ç: ${escapeHtml(chatTitle)}`,
      "",
      `üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å:\n<blockquote>${escapeHtml(replyText)}</blockquote>`,
      "",
      `üë§ –ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: ${reply.from?.first_name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"} (ID: ${reply.from?.id || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"})`,
      "",
      `üîó [–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é](https://t.me/c/${String(GROUP_ID).replace("-100", "")}/${reply.message_id})`,
    ].join("\n");

    await ctx.telegram.sendMessage(ADMIN_GROUP_ID, adminMessage, {
      parse_mode: "HTML",
    });

    console.log(`‚úÖ –†–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}`);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞:", error);

    try {
      await ctx.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        {
          reply_parameters: {
            message_id: ctx.message.message_id,
          },
        },
      );
    } catch (e) {
      // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
      console.error("–ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:", e);
    }
  }
};
