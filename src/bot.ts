import { isUserInChat } from "./utils/isUserInChat";

console.log("ENTRY OK");

import "dotenv/config";

import { Markup, Telegraf } from "telegraf";
import pkg from "telegraf/filters";

import type { UserRequest } from "./types";
import {
  ADMIN_GROUP_ID,
  BOT_TOKEN,
  escapeHtml,
  GROUP_ID,
  isAdmin,
  TIME_LIMIT_MINUTES,
} from "./utils";
import { banUserForSilence } from "./utils/banUserForSilence";
import { clearSilenceTimer } from "./utils/clearSilenceTimer";
import { closeAdminRequest } from "./utils/closeAdminRequest";
import { generateNewInviteLink } from "./utils/generateNewInviteLink";
import { isUserBanned } from "./utils/isUserBanned";
import { messageHasPhoto } from "./utils/messageHasPhoto";
import { pluralizeMinutes } from "./utils/pluralizeMinutes";
import { sendRequestToAdmins } from "./utils/sendRequestToAdmins";

const { message } = pkg;

if (!ADMIN_GROUP_ID) throw new Error("ADMIN_GROUP_ID is required in .env");
if (!BOT_TOKEN) throw new Error("BOT_TOKEN is required in .env");
if (!GROUP_ID) throw new Error("GROUP_ID is required in .env");

const welcomeMsgs = new Map<number, { chatId: number; messageId: number }>();
const userRequests = new Map<number, UserRequest>();
const userJoinTimes = new Map<number, Date>();
const userFirstMessages = new Map<number, boolean>();
const userInviteLinks = new Map<
  number,
  { link: string; created_at: Date; used: boolean; used_at?: Date }
>();
const silenceTimers = new Map<number, ReturnType<typeof setTimeout>>();

console.log("üîë BOT_TOKEN –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞...");
const bot = new Telegraf(BOT_TOKEN);

const rulesText = `
<b>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è.</b>

1. –ß–∞—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —é–º–æ—Ä–∞ 18+, –¥—Ä—É–∂–µ—Å–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ –ª—é–±–∏—Ç–µ–ª—å—Å–∫–æ–π –∏ –¥–æ–º–∞—à–Ω–µ–π —ç—Ä–æ—Ç–∏–∫–∏.
2. –ß–∞—Ç —Å—Ç—Ä–æ–≥–æ 18+. –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–∞—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º 18+, –∏–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ.
–ó–∞–π—Ç–∏ –∏ "–ü—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å" –Ω–µ –≤—ã–π–¥–µ—Ç :)
3. –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∂–∏–∑–Ω–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –æ–±—â–µ–Ω–∏–∏. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –¥–Ω–µ–π –∏–¥—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω.
4. –ó–∞—è–≤–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –æ—Ç –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö, –Ω–æ –∏—Ç–æ–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —á–∞—Ç–∞.
5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É.

<b>–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ.</b>

1. –û–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. –ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (–±–æ–ª—å—à–µ 5 —à—Ç—É–∫ –ø–æ–¥—Ä—è–¥), —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –∫–∞—Ä–∞—é—Ç—Å—è –º—å—é—Ç–æ–º. –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ —Å–ª–µ–¥—É–µ—Ç –±–∞–Ω.
2. –û–±—â–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ, —Å–æ–±–ª—é–¥–∞—è –ø—Ä–∞–≤–∏–ª–∞ —ç—Ç–∏–∫–∏ –∏ –ª–µ–∫—Å–∏–∫–∏.
3. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç 18+ –¥–ª—è –≤—Å–µ–æ–±—â–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞ —Å–ª–µ–¥—É–µ—Ç –ø—Ä—è—Ç–∞—Ç—å –∑–∞ —à—Ç–æ—Ä–∫—É/—Å–ø–æ–π–ª–µ—Ä.
4. –ì–æ—Ä—è—á–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ –∑–∞–∫—Ä–µ–ø–µ.

<b>–ó–∞–ø—Ä–µ—Ç—ã –∏ –±–∞–Ω—ã.</b>

1. –í —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–µ—É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª—é–±–æ–≥–æ —Ä–æ–¥–∞ —Ä–∞—Å–æ–≤–æ–π, –ø–æ–ª–æ–≤–æ–π –∏ –ø—Ä–æ—á–µ–π –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–∏.
2. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –±–µ–∑ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç –Ω–∏—Ö –≤ —á–∞—Ç–µ: –ø—Ä–∏ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã—Ö –∂–∞–ª–æ–±–∞—Ö –∏–¥—ë—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ ‚Äî –±–∞–Ω.
3. –í —á–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–µ—â–∞—é—â–∏–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.
–ù–æ! –ó–∞–ø—Ä–µ—â–µ–Ω–æ –ª—é–±–æ–≥–æ —Ä–æ–¥–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤ —á–∞—Ç–µ –≤ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –ª—é–±–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ø–æ —Å—Ä–µ–¥—Å—Ç–≤–∞–º —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∞ –≤—Ç–æ—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ —Ç–¥.
4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ–º–æ–≤, –∫–∞—Ä—Ç–∏–Ω–æ–∫, –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤, —Ñ–æ—Ç–æ, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –¥–µ—Ç—Å–∫–æ–π —ç—Ä–æ—Ç–∏–∫–æ–π/–ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏–µ–π –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏ –∫–∞—Ä–∞–µ—Ç—Å—è –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–º –±–∞–Ω–æ–º.
5. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –±–∞–Ω –∏–ª–∏ –º—å—é—Ç –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –∑–∞ –Ω–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ —Å–≤–æ–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é.
–ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ :)

–ü—Ä–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤ —á–∞—Ç –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–∏–Ω–∏-–∞–Ω–∫–µ—Ç—É –æ —Å–µ–±–µ, –∏ —Å–∫–∏–Ω—É—Ç—å –Ω—é–¥—Å –∏–ª–∏ –º–µ–º 18+. –í –Ω–∞—Ä—É—à–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ —É—á–∞—Å—Ç–Ω–∏–∫ –±—É–¥–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞.

‚ö†‚ö†‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É (–∏–º—è, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, –≥–æ—Ä–æ–¥, —Ñ–æ—Ç–æ –∏–ª–∏ –º–µ–º 18+) –≤ —Ç–µ—á–µ–Ω–∏–µ ${pluralizeMinutes(TIME_LIMIT_MINUTES)} –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç–µ –∑–∞–±–∞–Ω–µ–Ω—ã. ‚ö†‚ö†‚ö†

<b>–ù–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≥—Ä—É–ø–ø—ã.</b>
`;

bot.start(async (ctx) => {
  if (ctx.chat.type !== "private") return;

  const user = ctx.from;

  if (await isUserInChat(bot, GROUP_ID, user.id)) {
    await ctx.reply("‚úÖ –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —á–∞—Ç–µ.");
    return;
  }

  const existing = userRequests.get(user.id);

  if (existing?.status === "pending") {
    await ctx.reply("‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –µ—â—ë –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.");
    return;
  }

  const prev = userRequests.get(user.id) || {};
  const requestCount = (prev.request_count || 0) + 1;

  userInviteLinks.delete(user.id);

  userRequests.set(user.id, {
    username: user.username,
    first_name: user.first_name,
    last_name: user.last_name,
    agreed: false,
    approved: false,
    join_time: null,
    request_count: requestCount,
    extra_answer: null,
    status: "created",
  });

  await ctx.reply(rulesText, {
    parse_mode: "HTML",
    ...Markup.inlineKeyboard([
      Markup.button.callback(
        "‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –Ω–∞–ø–∏—à—É –∞–Ω–∫–µ—Ç—É –ø—Ä–∏ –≤—Ö–æ–¥–µ",
        `agree_rules`,
      ),
    ]),
  });
});

// === –ö–Ω–æ–ø–∫–∞ "—Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏" ===
bot.action("agree_rules", async (ctx) => {
  const user = ctx.from;
  const userId = ctx.from.id;

  if (await isUserBanned(ctx, GROUP_ID, userId)) {
    await ctx.editMessageText(
      "‚õîÔ∏è –í–∞–º —Ä–∞–Ω–µ–µ –±—ã–ª –≤—ã–¥–∞–Ω –±–∞–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –°–Ω–∞—á–∞–ª–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.",
    );
    await ctx.telegram.sendMessage(
      ADMIN_GROUP_ID,
      `‚õîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 
      ‚îú ID: <code>${userId}</code>
      ‚îú <a href="tg://user?id=${userId}">${userId}</a>
      ‚îú –ò–º—è: ${user.first_name || "‚Äî"}
      ‚îú –§–∞–º–∏–ª–∏—è: ${user.last_name || "‚Äî"}
      ‚îî Username: @${user.username || "‚Äî"}
      –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏, –Ω–æ –æ–Ω –≤ –±–∞–Ω–µ.`,
      { parse_mode: "HTML" },
    );
    return;
  }

  const data = userRequests.get(user.id) || {
    username: user.username,
    first_name: user.first_name,
    last_name: user.last_name,
    request_count: 0,
  };
  data.agreed = true;
  userRequests.set(user.id, data);

  // –ì–µ–Ω–µ—Ä–∏–º –Ω–æ–≤—É—é –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—É—é)
  const invite = await generateNewInviteLink(
    ctx,
    user.id,
    GROUP_ID,
    userInviteLinks,
  );

  await ctx.editMessageText(
    "‚úÖ –í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏! –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è.",
  );

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∞–º
  await sendRequestToAdmins(ctx, user.id, invite?.invite_link, userRequests);
});

bot.action(/^(approve|reject)_(\d+)$/, async (ctx) => {
  if (ctx.chat?.id !== ADMIN_GROUP_ID) {
    return;
  }

  const admin = ctx.from;
  if (!isAdmin(admin.id)) {
    return ctx.answerCbQuery("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", {
      show_alert: true,
    });
  }

  const [, action, targetIdStr] = ctx.match;
  const targetId = Number(targetIdStr);
  const userInfo = userRequests.get(targetId);

  if (!userInfo) {
    return ctx.editMessageText("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª.");
  }

  if (userInfo.status && userInfo.status !== "pending") {
    return ctx.answerCbQuery(
      `–ó–∞—è–≤–∫–∞ —É–∂–µ ${userInfo.status === "approved" ? "–æ–¥–æ–±—Ä–µ–Ω–∞" : "–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"}.`,
      { show_alert: true },
    );
  }

  if (action === "approve") {
    userInfo.approved = true;
    userInfo.status = "approved";
    userRequests.set(targetId, userInfo);

    const invite = await generateNewInviteLink(
      ctx,
      targetId,
      GROUP_ID,
      userInviteLinks,
    );
    if (!invite?.invite_link) {
      return ctx.editMessageText(
        `‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è ${userInfo.first_name || targetId}`,
      );
    }

    await closeAdminRequest(
      ctx,
      targetId,
      userRequests,
      `‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç ${userInfo.first_name || targetId} –æ–¥–æ–±—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ${admin.first_name}\nüîó –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é`,
    );

    const successMsg = [
      "üéâ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ–¥–æ–±—Ä–µ–Ω!",
      "",
      "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É!",
      "",
      "–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:",
      invite.invite_link,
      "",
      "‚ö†Ô∏è <b>–í–ê–ñ–ù–û:</b>",
      "‚Ä¢ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
      `‚Ä¢ –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –≤ —Ç–µ—á–µ–Ω–∏–µ ${pluralizeMinutes(TIME_LIMIT_MINUTES)}!`,
      "‚Ä¢ –ò–Ω–∞—á–µ –≤—ã –±—É–¥–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω—ã",
      "",
      "üÜò –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é —á–µ—Ä–µ–∑ /start",
    ].join("\n");

    try {
      await ctx.telegram.sendMessage(targetId, successMsg, {
        parse_mode: "HTML",
      });
    } catch (e: any) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–≤–∞–π—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:", e);

      await ctx.telegram.sendMessage(
        ADMIN_GROUP_ID,
        `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${e.message || e}`,
      );
    }
  } else {
    // reject
    userInviteLinks.delete(targetId);
    userInfo.approved = false;
    userInfo.status = "rejected";
    userRequests.set(targetId, userInfo);

    await closeAdminRequest(
      ctx,
      targetId,
      userRequests,
      `‚ùå –ó–∞–ø—Ä–æ—Å –æ—Ç ${userInfo.first_name || targetId} –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ${admin.first_name}`,
    );

    try {
      await ctx.telegram.sendMessage(
        targetId,
        "‚ùå –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start",
      );
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏:", e);

      await ctx.telegram.sendMessage(
        ADMIN_GROUP_ID,
        `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏`,
      );
    }
  }
});

// === –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ ===
bot.on(message("new_chat_members"), async (ctx) => {
  // –¢–æ–ª—å–∫–æ –≤ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø–µ
  if (!ctx.chat || ctx.chat.id !== GROUP_ID) return;

  for (const member of ctx.message.new_chat_members) {
    if (member.is_bot) continue;

    const joinTime = new Date();
    userJoinTimes.set(member.id, joinTime);
    userFirstMessages.set(member.id, false);

    // –ø–æ–º–µ—Ç–∏–º —Å—Å—ã–ª–∫—É –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é
    const linkInfo = userInviteLinks.get(member.id);
    if (linkInfo) {
      linkInfo.used = true;
      linkInfo.used_at = new Date();
      userInviteLinks.set(member.id, linkInfo);
    }

    // —Ç–∞–π–º–µ—Ä –Ω–∞ –º–æ–ª—á–∞–Ω–∏–µ
    clearSilenceTimer(member.id, silenceTimers);
    const handle = setTimeout(
      async () => {
        try {
          const wrote = userFirstMessages.get(member.id);
          if (!wrote) {
            await banUserForSilence(
              ctx,
              member,
              joinTime,
              GROUP_ID,
              userJoinTimes,
              userFirstMessages,
              userInviteLinks,
              silenceTimers,
            );
          }
        } catch (e) {
          console.error("–û—à–∏–±–∫–∞ –≤ —Ç–∞–π–º–µ—Ä–µ –º–æ–ª—á–∞–Ω–∏—è:", e);

          await ctx.telegram.sendMessage(
            ADMIN_GROUP_ID,
            `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${e.message || e}`,
          );
        }
      },
      TIME_LIMIT_MINUTES * 60 * 1000,
    );
    silenceTimers.set(member.id, handle);

    const sent = await ctx.replyWithHTML(
      [
        `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id=${member.id}">${escapeHtml(member.first_name || "–≥–æ—Å—Ç—å")}</a>!`,
        "",
        `‚ö†Ô∏è <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:</b> –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É (–∏–º—è, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, –≥–æ—Ä–æ–¥, —Ñ–æ—Ç–æ –∏–ª–∏ –º–µ–º 18+) –≤ —Ç–µ—á–µ–Ω–∏–∏ ${pluralizeMinutes(TIME_LIMIT_MINUTES)}.`,
        "",
        "‚è∞ –í—Ä–µ–º—è –ø–æ—à–ª–æ!",
      ].join("\n"),
    );

    welcomeMsgs.set(member.id, {
      chatId: ctx.chat.id,
      messageId: sent.message_id,
    });
  }
});

bot.command("whois", async (ctx) => {
  if (!isAdmin(ctx.message.from.id)) {
    return;
  }

  const reply = ctx.message?.reply_to_message;
  const arg = (ctx.message?.text || "").split(/\s+/)[1]?.trim();
  let user = null;

  if (reply?.from) {
    user = reply.from;
  }

  if (!user && arg && /^\d+$/.test(arg)) {
    try {
      const member = await ctx.telegram.getChatMember(ctx.chat.id, Number(arg));
      user = member?.user || null;
    } catch {
      // –Ω–µ –Ω–∞—à–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–ª–∏ –±–æ—Ç –Ω–µ –≤–∏–¥–∏—Ç —é–∑–µ—Ä–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
    }
  }

  if (!user) {
    return ctx.reply(
      [
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:",
        "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ /whois –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "‚Ä¢ –∏–ª–∏ /whois <user_id> (—á–∏—Å–ª–æ–º)",
        "",
        "–ü–æ–¥—Å–∫–∞–∑–∫–∞: @username –Ω–µ–ª—å–∑—è —Ä–µ–∑–æ–ª–≤–∏—Ç—å —á–µ—Ä–µ–∑ Bot API –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
      ].join("\n"),
    );
  }

  await ctx.reply(
    [
      `ID: <code>${user.id}</code>`,
      `–ò–º—è: ${user.first_name || "‚Äî"} ${user.last_name || ""}`.trim(),
      `Username: @${user.username || "‚Äî"}`,
      `Is bot: ${user.is_bot ? "yes" : "no"}`,
    ].join("\n"),
    { parse_mode: "HTML" },
  );
});

bot.command("chatid", async (ctx) => {
  if (isAdmin(ctx.from.id)) {
    console.log("chat id", ctx.chat.id);
  }
});

// === –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥—Ä—É–ø–ø–µ ===
bot.on("message", async (ctx) => {
  if (!ctx.chat || ctx.chat.id !== GROUP_ID) return;
  const user = ctx.from;
  if (!user || user.is_bot || isAdmin(user.id)) return;

  if (
    userFirstMessages.has(user.id) &&
    userFirstMessages.get(user.id) === false
  ) {
    if (!messageHasPhoto(ctx.message)) {
      await ctx.replyWithHTML(
        [
          `‚ö†Ô∏è <a href="tg://user?id=${user.id}">${escapeHtml(user.first_name || "–≥–æ—Å—Ç—å")}</a>,`,
          "–ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ñ–æ—Ç–æ (–∏–ª–∏ –º–µ–º 18+) üì∏.",
          `–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –∏–Ω–∞—á–µ –≤—ã –±—É–¥–µ—Ç–µ –∑–∞–±–∞–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ ${pluralizeMinutes(TIME_LIMIT_MINUTES)} –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è.`,
        ].join("\n"),
      );
      // –ù–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º: —Ç–∞–π–º–µ—Ä –Ω–µ —Å–Ω–∏–º–∞–µ–º, —Å—Ç–∞—Ç—É—Å –Ω–µ –æ—Ç–º–µ—á–∞–µ–º
      return;
    }

    userFirstMessages.set(user.id, true);

    // —Å–Ω—è—Ç—å —Ç–∞–π–º–µ—Ä
    clearSilenceTimer(user.id, silenceTimers);

    // —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    const wm = welcomeMsgs.get(user.id);
    if (wm) {
      try {
        await ctx.telegram.deleteMessage(wm.chatId, wm.messageId);
      } catch (e) {
        // —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –º–æ–≥–ª–∏ —É–¥–∞–ª–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
      } finally {
        welcomeMsgs.delete(user.id);
      }
    }

    await ctx.replyWithHTML(
      [
        `‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, <a href="tg://user?id=${user.id}">${escapeHtml(user.first_name || "–≥–æ—Å—Ç—å")}</a>!`,
        "",
        "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!",
      ].join("\n"),
    );

    userJoinTimes.delete(user.id);
  }
});

// === –ö–æ–º–∞–Ω–¥–∞ /reset –≤ –ª–∏—á–∫–µ ===
bot.command("reset", async (ctx) => {
  const user = ctx.from;
  userRequests.delete(user.id);
  userInviteLinks.delete(user.id);
  clearSilenceTimer(user.id, silenceTimers);
  ctx.reply(
    "üîÑ –í–∞—à–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–æ–π.",
  );
});

try {
  bot.launch();
  console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (Telegraf, polling).");

  await bot.telegram.setMyCommands(
    [{ command: "start", description: "–ù–∞—á–∞—Ç—å" }],
    { scope: { type: "all_private_chats" } },
  );

  await bot.telegram.setMyCommands(
    [
      { command: "start", description: "–ù–∞—á–∞—Ç—å" },
      {
        command: "whois",
        description: "–ò–Ω—Ñ–æ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (reply –∏–ª–∏ /whois <id>)",
      },
      { command: "chatid", description: "–ü–æ–∫–∞–∑–∞—Ç—å ID —á–∞—Ç–∞" },
    ],
    { scope: { type: "chat", chat_id: ADMIN_GROUP_ID } },
  );
} catch (e) {
  console.log("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞", e);
}

// –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
