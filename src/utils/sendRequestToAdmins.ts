import { type Context, Markup } from "telegraf";

import type { UserRequest } from "../types";
import { ADMIN_GROUP_ID, TIME_LIMIT_MINUTES } from "./index";
import { pluralizeMinutesGenitive } from "./pluralizeMinutes";

export async function sendRequestToAdmins(
  ctx: Context,
  userId: number,
  inviteLink: string | undefined,
  userRequests: Map<number, UserRequest>,
) {
  const u = userRequests.get(userId);
  if (!u) return;

  let text = [
    "üîî <b>–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É</b>",
    "",
    "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</b>",
    `‚îú ID: <code>${userId}</code>`,
    `‚îú –ò–º—è: ${u.first_name || "‚Äî"}`,
    `‚îú –§–∞–º–∏–ª–∏—è: ${u.last_name || "‚Äî"}`,
    `‚îî Username: @${u.username || "‚Äî"}`,
    `‚îú –ó–∞–ø—Ä–æ—Å–æ–≤: ${u.request_count || 1}`,
    "",
    `‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, –≤–∫–ª—é—á–∞—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ ${pluralizeMinutesGenitive(TIME_LIMIT_MINUTES)} –º–∏–Ω—É—Ç.`,
  ].join("\n");

  if (inviteLink) {
    text += `\n\nüîó <b>–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞</b>`;
  }

  const kb = Markup.inlineKeyboard([
    Markup.button.callback("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", `approve_${userId}`),
    Markup.button.callback("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", `reject_${userId}`),
  ]);

  try {
    const sent = await ctx.telegram.sendMessage(ADMIN_GROUP_ID, text, {
      parse_mode: "HTML",
      ...kb,
    });

    const prev = userRequests.get(userId) || {};
    userRequests.set(userId, {
      ...prev,
      adminMsg: { chatId: sent.chat.id, messageId: sent.message_id, text },
      status: "pending",
    });
  } catch (e) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ ADMIN_GROUP_ID=${ADMIN_GROUP_ID}:`, e);
  }
}
